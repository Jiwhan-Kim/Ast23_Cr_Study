'''
* Asterisk Chromium Project 2024
* ACrP 2024
*
* AI Project since Asterisk Vanadium Project 2023
* Repository generated by Jiwhan-Kim, Yonsei Univeristy.
*
* B. Linear Algebra.
* B.1. Linear Transformation.
'''

# Importing Libraries
import numpy as np

# 2D Transformation.
def linear_transformation_2d(x: np.matrix, theta: float):
    # x: 2x1 matrix
    # theta: radian
    # T: 2x2 matrix
    # y = T * x: (2 x 2) * (2 * 1) => (2 * 1)
    x = x.reshape(2, 1)
    T = np.matrix([[np.cos(theta), -np.sin(theta)], [np.sin(theta), np.cos(theta)]])
    y = T * x

    return y


if __name__ == "__main__":
    # Test
    x = np.matrix([1, 1]) # (x, y) = (1, 1)
    theta = np.pi / 4
    x = linear_transformation_2d(x, theta) # Rotate a vector counterclockwise by 45 degrees.

    print(x) # (x, y) = (sqrt2, 0)
    
